<?xml version="1.0" encoding="utf-8"?>
<robot
  name="two_wheel_robot">
  <link
    name="base_link">
    <inertial>
      <origin
        xyz="0.0181995182140738 -3.2612801348364E-16 -0.00276660416271973"
        rpy="0 0 0" />
      <mass
        value="0.443722021822356" />
      <inertia
        ixx="0.000696660783343318"
        ixy="-4.10541788338937E-18"
        ixz="-1.73835831247213E-05"
        iyy="0.000483852662901766"
        iyz="-9.39165770832175E-20"
        izz="0.00110580849651397" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://two_wheel_robot/meshes/base_link.STL" />
      </geometry>
      <material
        name="white">
        <color
          rgba="255 255 255 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://two_wheel_robot/meshes/base_link.STL" />
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>0</mu>
            <mu2>0</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
  </link>
  <link
    name="left_wheel">
    <inertial>
      <origin
        xyz="-5.55111512312578E-16 -0.003175 5.96744875736022E-16"
        rpy="0 0 0" />
      <mass
        value="0.0200098005396681" />
      <inertia
        ixx="8.1981759107312E-06"
        ixy="-1.00227236420066E-21"
        ixz="-2.27167310991176E-21"
        iyy="1.62618776244189E-05"
        iyz="-1.73164708639823E-22"
        izz="8.1981759107312E-06" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://two_wheel_robot/meshes/left_wheel.STL" />
      </geometry>
      <material
        name="black">
        <color
          rgba="0 0 0 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://two_wheel_robot/meshes/left_wheel.STL" />
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>99</mu>
            <mu2>99</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
  </link>
  <joint
    name="left_joint"
    type="continuous">
    <origin
      xyz="0 0.10055 -0.024525"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="left_wheel" />
    <axis
      xyz="0 1 0" />
  </joint>
  <link
    name="right_wheel">
    <inertial>
      <origin
        xyz="2.77555756156289E-17 0.00317500000000001 -7.63278329429795E-17"
        rpy="0 0 0" />
      <mass
        value="0.0200098005396681" />
      <inertia
        ixx="8.19817591073118E-06"
        ixy="1.19139779353411E-21"
        ixz="-5.16987882845644E-22"
        iyy="1.62618776244189E-05"
        iyz="2.65399463552688E-23"
        izz="8.19817591073119E-06" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://two_wheel_robot/meshes/right_wheel.STL" />
      </geometry>
      <material
        name="black">
        <color
          rgba="0 0 0 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://two_wheel_robot/meshes/right_wheel.STL" />
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>99</mu>
            <mu2>99</mu2>
          </ode>
        </friction>
      </surface>
    </collision>
  </link>
  <joint
    name="right_joint"
    type="continuous">
    <origin
      xyz="0 -0.10055 -0.024525"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="right_wheel" />
    <axis
      xyz="0 1 0" />
  </joint>
  <transmission name="left_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="left_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="right_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="right_motor">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
<gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <!-- Plugin update rate in Hz -->
    <updateRate>10</updateRate>
    <!-- Name of left joint, defaults to `left_joint` -->
    <leftJoint>left_joint</leftJoint>
    <!-- Name of right joint, defaults to `right_joint` -->
    <rightJoint>right_joint</rightJoint>
    <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
    <wheelSeparation>0.1883</wheelSeparation>
    <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
    <wheelDiameter>0.0762</wheelDiameter>
    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
    <wheelTorque>5</wheelTorque>
    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
    <commandTopic>cmd_vel</commandTopic>
    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
    <odometryTopic>odom</odometryTopic>
    <!-- Odometry frame, defaults to `odom` -->
    <odometryFrame>odom</odometryFrame>
    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <robotBaseFrame>base_link</robotBaseFrame>
    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometrySource>1</odometrySource>
    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
    <publishWheelTF>true</publishWheelTF>
    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publishOdom>true</publishOdom>
    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
    <publishWheelJointState>true</publishWheelJointState>
    <!-- Set to true to swap right and left wheels, defaults to true -->
    <legacyMode>false</legacyMode>
  </plugin>
</gazebo>
</robot>
